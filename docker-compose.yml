version: '3.8'

services:
  django:
    build: .
    container_name: django_app
    restart: always
    env_file: ./.env.dev
    environment:
    #  - SESSION_COOKIE_DOMAIN=localhost
      - SESSION_COOKIE_DOMAIN=192.168.0.252
    depends_on:
      - db
      - redis
    links:
      - db:db
    volumes:
      - ./:/usr/src/mysite/planilla/
      - ./planilla/media:/usr/src/mysite/planilla/media  # Persistir im치genes
      - static_volume:/usr/src/mysite/planilla/static  # Montar volumen para archivos est치ticos
    expose:
      - "8000" # Gunicorn para HTTP
      - "8001" # Daphne para Websockets
    networks:
      - mynetwork
    command: >
      sh -c "gunicorn -b 0.0.0.0:8000 mysite.wsgi:application & daphne -b 0.0.0.0 -p 8001 mysite.asgi:application"

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./planilla/media:/usr/src/mysite/planilla/media  # Persistir im치genes
      - static_volume:/usr/src/mysite/planilla/static  # Montar volumen para archivos est치ticos
    depends_on:
      - django
    networks:
      - mynetwork
  db:
    image: postgres:15
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.dev
    ports:
      - 5432:5432
    networks:
      - mynetwork
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - mynetwork
volumes:
  postgres_data:
  static_volume:
  
networks:
  mynetwork:
    driver: bridge